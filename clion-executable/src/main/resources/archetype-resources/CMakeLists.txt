cmake_minimum_required(VERSION 3.3)
project(${artifactId})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

#Project headers directory
include_directories("src/main/include")

#
#1. add your required <dependencies/> in `pom.xml`
#2. execute `mvn compile` in the terminal (Maven will bring your dependencies headers and libraries)
#3. add the `include_directories` and `target_link_libraries` in `CMakeLists.txt` and reload the project.
#4. enjoy CLion!
#
#Library dependencies (you could find some in https://github.com/lmiguelmh/ and https://github.com/maven-nar/nar-maven-plugin/wiki/Working-examples)
#opencv
#include_directories("target/nar/opencv-core-2.4.10-noarch/include")
#include_directories("target/nar/opencv-highgui-2.4.10-noarch/include")
#include_directories("target/nar/opencv-imgproc-2.4.10-noarch/include")
#log4z
#include_directories("target/nar/log4z-3.0.1-noarch/include")
#rapidjson
#include_directories("target/nar/rapidjson-1.0.2-noarch/include")
#basen-lib
#include_directories("target/nar/basen-lib-1.0-noarch/include")
#
#My dependencies
#commons-lib
#include_directories("target/nar/commons-1.0-noarch/include")
#jdk-jni
#include_directories("target/nar/jni-include-jdk1.7.0_80-noarch/include")
#include_directories("target/nar/jni-include-win32-jdk1.7.0_80-noarch/include")
#pipe-lib
#include_directories("target/nar/pipe-lib-1.0-noarch/include")
#jni-lib
#include_directories("target/nar/jni-lib-1.0-noarch/include")
#process-lib
#include_directories("target/nar/process-lib-1.0-noarch/include")
#winreg-lib
#include_directories("target/nar/winreg-lib-1.0-noarch/include")
#
#Test dependencies
#gtest
#include_directories("target/test-nar/gtest-1.7.0-noarch/include")
#
#if you want to build your own dependencies follow this SO answer (don't forget to give +1):
#http://stackoverflow.com/questions/34076669/add-a-static-library-for-the-link-phase-of-a-maven-nar-project
#

#Project sources and headers
set(SOURCE_FILES src/main/include/main.h src/main/c/main.cpp)
add_executable(${artifactId} ${SOURCE_FILES})

#Tests sources and headers
add_executable(${artifactId}-test src/test/c/main-test.cpp)
